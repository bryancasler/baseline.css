/*! baseline.css v0.1.0 | https://github.com/ryanmorr/baseline.css */

/**
 * Define the character encoding for the stylesheet
 */

@charset "UTF-8";

/**
 * Build on top of `normalize.css` for a consistent base layer
 */

@import "normalize.css";

/* ------------------------------------------------------------------ *\
    Variables
\* ------------------------------------------------------------------ */

/**
 * Variables for some of the opinionated-based styles, adjust
 * per your preferences
 */

:root {
    --font-color: #333;
    --font-size: 1.6em;
    --font-family: sans-serif;
    --line-height: 1.6;
    --page-min-width: 300px;
}

/* ------------------------------------------------------------------ *\
    Page
\* ------------------------------------------------------------------ */

/**
 * 1. Ensure the page's width cannot be minimized below the specified
 *    breakpoint
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’
 *    when navigating between pages that do/do not have enough content
 *    to produce scrollbars naturally
 * 3. Force a scrollbar that is always visible and pushes the content
 *    (not overlays it) in Edge 12+ and IE 10
 * 4. Globally remove the tap highlight color in iOS and Android
 * 5. Optimize for responsive design by resetting the box model to
 *    include the padding and border within the declared width/height
 * 6. Apply a base font size of 10 pixels to better facilitate em
 *    units by simplifying calculations (1.4em = 14px)
 */

html {
    min-width: var(--page-min-width); /* [1] */
    overflow-y: scroll; /* [2] */
    -ms-overflow-style: scrollbar; /* [3] */
    -webkit-tap-highlight-color: transparent; /* [4] */
    box-sizing: border-box; /* [5] */
    font-size: 10px; /* [6] */
}

/**
 * Set the default typography for the entire project based on
 * the default variables
 */

body {
    color: var(--font-color);
    font-size: var(--font-size);
    font-family: var(--font-family);
    line-height: var(--line-height);
}

/**
 * Ensure the page always fills at least the entire height of
 * the viewport
 */

html,
body {
    min-height: 100%;
}

/* ------------------------------------------------------------------ *\
    Global
\* ------------------------------------------------------------------ */

/**
 * 1. Remove the margin, padding, border, and outline for all
 *    elements by default
 * 2. Inherit the typography of the parent element
 */

* {
    margin: 0; /* [1] */
    padding: 0; /* [1] */
    border: 0; /* [1] */
    outline: 0; /* [1] */
    font: inherit; /* [2] */
}

/**
 * Allow elements to inherit their box model to take advantage of
 * `border-box` by default with the added flexibility of being able
 * to override it where necessary
 */

*,
::before,
::after {
    box-sizing: inherit;
}

/* ------------------------------------------------------------------ *\
    Embedded Content
\* ------------------------------------------------------------------ */

/*
 * Remove the default white space at the bottom of the element
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/**
 * Responsive media elements that maintain their aspect ratios
 */

audio,
embed,
img,
object,
video {
    max-width: 100%;
}

embed,
img,
object,
video {
    height: auto;
}

embed,
object {
    height: 100%;
}

/**
 * if `width` and/or `height` attributes are preset, disable the
 * image's responsive behavior
 */

img[width],
img[height] {
    max-width: none;
}

/* ------------------------------------------------------------------ *\
    Print
\* ------------------------------------------------------------------ */

/**
 * Optimize the page for printing
 * Source: https://github.com/h5bp/html5-boilerplate
 */

@media print {
    *,
    *::before,
    *::after,
    *::first-letter,
    *::first-line {
        background: transparent !important;
        color: #000 !important;
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]::after {
        content: " (" attr(href) ")";
    }

    abbr[title]::after {
        content: " (" attr(title) ")";
    }

    a[href^="#"]::after,
    a[href^="javascript:"]::after {
        content: "";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
